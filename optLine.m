function optLine()
p1 = [100 200 300]';
p2 = [103 180 150]';
p1 = 10 * rand(3,1);
p2 = 10 * rand(3,1);
p1 = sign(p1(3)) * p1;
p2 = sign(p2(3)) * p2;

dir = (p2 - p1)./norm(p2 - p1);


px = p1 + 10 * dir;

dir1 = p1./norm(p1);
dir2 = p2./norm(p2);
rou1 = 1/ norm(p1);
rou2 = 1/ norm(p2);

dir_x = px./norm(px);

[roux, xyz, d_roux_d_rou12] = computeJac(dir1, dir2, rou1,rou2, dir_x);

[[xyz - px]' [roux - 1/norm(px)]]




dir_x_stack = [];
obs_rou_x_stack = [];
for i = 1 : 20
    px_temp = p1 + 10 * i * dir;
    dir_x_temp = px_temp./norm(px_temp);
    dir_x_stack(:,i) = dir_x_temp;
    obs_rou_x_stack(:,i) = 1/norm(px_temp);
end



rou1_gt = rou1;
rou2_gt = rou2;

rou1 = rou1_gt + 2;
rou2 = rou2_gt + 10;

for iter = 1 : 10

    
    H = zeros(2,2);
    b = zeros(2,1);
    err_sum = 0;
    for i = 1 : length(obs_rou_x_stack)
        [roux, px, d_roux_d_rou12] = computeJac(dir1, dir2, rou1, rou2, dir_x_stack(:,i));
        err = roux - obs_rou_x_stack(1, i);
        H = H + d_roux_d_rou12' * d_roux_d_rou12;
        b = b - d_roux_d_rou12' * err;
        err_sum = err_sum + err.^2;
    end
    
    dx = inv(H) * b;
    
    fprintf(sprintf('iter: %d, err: %f£¬ dx: [%f %f]\n', iter, err_sum, dx(1), dx(2))); 
    
    rou1 = rou1 + dx(1);
    rou2 = rou2 + dx(2);
    
end



end
function [roux, px, d_roux_d_rou12] = computeJac(dir1, dir2, rou1, rou2, dir_x)
p11 = dir1/rou1;
p22 = dir2/rou2;

ptDiff = p22 - p11;

dir = ptDiff./norm(ptDiff);

px = inv((SkewSymMat(dir) * SkewSymMat(dir) + SkewSymMat(dir_x) * SkewSymMat(dir_x))) * (SkewSymMat(dir)* SkewSymMat(dir)) * p11;

roux = 1/norm(px);


x = dir(1);
y = dir(2);
z = dir(3);
a1 = dir_x(1);
a2 = dir_x(2);
a3 = dir_x(3);
p1 = p11(1);
p2 = p11(2);
p3 = p11(3);


d_xyz_d_lineDir = zeros(3,3);
d_xyz_d_lineDir(1,1) = - (p2*a1^4*y + p3*a1^4*z - 2*p2*a1^3*a2*x + p1*a1^3*a2*y - 2*p3*a1^3*a3*x + p1*a1^3*a3*z + p2*a1^2*a2^2*y + p3*a1^2*a2^2*z + p2*a1^2*a3^2*y + p3*a1^2*a3^2*z + 3*p2*a1^2*x^2*y + 3*p3*a1^2*x^2*z - 2*p1*a1^2*x*y^2 - 2*p1*a1^2*x*z^2 + p2*a1^2*y^3 + p3*a1^2*y^2*z + p2*a1^2*y*z^2 + p3*a1^2*z^3 - 2*p2*a1*a2^3*x + p1*a1*a2^3*y - 2*p3*a1*a2^2*a3*x + p1*a1*a2^2*a3*z - 2*p2*a1*a2*a3^2*x + p1*a1*a2*a3^2*y - 4*p2*a1*a2*x^3 + 3*p1*a1*a2*x^2*y - 2*p2*a1*a2*x*y^2 - 2*p2*a1*a2*x*z^2 + p1*a1*a2*y^3 + p1*a1*a2*y*z^2 - 2*p3*a1*a3^3*x + p1*a1*a3^3*z - 4*p3*a1*a3*x^3 + 3*p1*a1*a3*x^2*z - 2*p3*a1*a3*x*y^2 - 2*p3*a1*a3*x*z^2 + p1*a1*a3*y^2*z + p1*a1*a3*z^3 + 3*p3*a2^2*x^2*z - 2*p1*a2^2*x*z^2 + p3*a2^2*y^2*z + p3*a2^2*z^3 - 3*p3*a2*a3*x^2*y - 3*p2*a2*a3*x^2*z + 4*p1*a2*a3*x*y*z - p3*a2*a3*y^3 - p2*a2*a3*y^2*z - p3*a2*a3*y*z^2 - p2*a2*a3*z^3 + 3*p2*a3^2*x^2*y - 2*p1*a3^2*x*y^2 + p2*a3^2*y^3 + p2*a3^2*y*z^2)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((- 2*a1^3*a2*y - 2*a1^3*a3*z + 2*a1^2*a2^2*x + 2*a1^2*a3^2*x + 2*a1^2*x*y^2 + 2*a1^2*x*z^2 - 2*a1*a2^3*y - 2*a1*a2^2*a3*z - 2*a1*a2*a3^2*y - 6*a1*a2*x^2*y - 2*a1*a2*y^3 - 2*a1*a2*y*z^2 - 2*a1*a3^3*z - 6*a1*a3*x^2*z - 2*a1*a3*y^2*z - 2*a1*a3*z^3 + 2*a2^4*x + 4*a2^2*a3^2*x + 4*a2^2*x^3 + 2*a2^2*x*y^2 + 4*a2^2*x*z^2 - 4*a2*a3*x*y*z + 2*a3^4*x + 4*a3^2*x^3 + 4*a3^2*x*y^2 + 2*a3^2*x*z^2)*(- p2*a1^4*x*y - p3*a1^4*x*z + p1*a1^4*y^2 + p1*a1^4*z^2 + p2*a1^3*a2*x^2 - p1*a1^3*a2*x*y - p3*a1^3*a2*y*z + p2*a1^3*a2*z^2 + p3*a1^3*a3*x^2 - p1*a1^3*a3*x*z + p3*a1^3*a3*y^2 - p2*a1^3*a3*y*z - p2*a1^2*a2^2*x*y - p3*a1^2*a2^2*x*z + p1*a1^2*a2^2*y^2 + p1*a1^2*a2^2*z^2 - p2*a1^2*a3^2*x*y - p3*a1^2*a3^2*x*z + p1*a1^2*a3^2*y^2 + p1*a1^2*a3^2*z^2 - p2*a1^2*x^3*y - p3*a1^2*x^3*z + p1*a1^2*x^2*y^2 + p1*a1^2*x^2*z^2 - p2*a1^2*x*y^3 - p3*a1^2*x*y^2*z - p2*a1^2*x*y*z^2 - p3*a1^2*x*z^3 + p1*a1^2*y^4 + 2*p1*a1^2*y^2*z^2 + p1*a1^2*z^4 + p2*a1*a2^3*x^2 - p1*a1*a2^3*x*y - p3*a1*a2^3*y*z + p2*a1*a2^3*z^2 + p3*a1*a2^2*a3*x^2 - p1*a1*a2^2*a3*x*z + p3*a1*a2^2*a3*y^2 - p2*a1*a2^2*a3*y*z + p2*a1*a2*a3^2*x^2 - p1*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*y*z + p2*a1*a2*a3^2*z^2 + p2*a1*a2*x^4 - p1*a1*a2*x^3*y + p2*a1*a2*x^2*y^2 + p2*a1*a2*x^2*z^2 - p1*a1*a2*x*y^3 - p1*a1*a2*x*y*z^2 + p3*a1*a3^3*x^2 - p1*a1*a3^3*x*z + p3*a1*a3^3*y^2 - p2*a1*a3^3*y*z + p3*a1*a3*x^4 - p1*a1*a3*x^3*z + p3*a1*a3*x^2*y^2 + p3*a1*a3*x^2*z^2 - p1*a1*a3*x*y^2*z - p1*a1*a3*x*z^3 - p3*a2^2*x^3*z + p1*a2^2*x^2*z^2 - p3*a2^2*x*y^2*z - p3*a2^2*x*z^3 + p1*a2^2*y^2*z^2 + p1*a2^2*z^4 + p3*a2*a3*x^3*y + p2*a2*a3*x^3*z - 2*p1*a2*a3*x^2*y*z + p3*a2*a3*x*y^3 + p2*a2*a3*x*y^2*z + p3*a2*a3*x*y*z^2 + p2*a2*a3*x*z^3 - 2*p1*a2*a3*y^3*z - 2*p1*a2*a3*y*z^3 - p2*a3^2*x^3*y + p1*a3^2*x^2*y^2 - p2*a3^2*x*y^3 - p2*a3^2*x*y*z^2 + p1*a3^2*y^4 + p1*a3^2*y^2*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(1,2) = - (p2*a1^4*x - 2*p1*a1^4*y + p1*a1^3*a2*x + p3*a1^3*a2*z - 2*p3*a1^3*a3*y + p2*a1^3*a3*z + p2*a1^2*a2^2*x - 2*p1*a1^2*a2^2*y + p2*a1^2*a3^2*x - 2*p1*a1^2*a3^2*y + p2*a1^2*x^3 - 2*p1*a1^2*x^2*y + 3*p2*a1^2*x*y^2 + 2*p3*a1^2*x*y*z + p2*a1^2*x*z^2 - 4*p1*a1^2*y^3 - 4*p1*a1^2*y*z^2 + p1*a1*a2^3*x + p3*a1*a2^3*z - 2*p3*a1*a2^2*a3*y + p2*a1*a2^2*a3*z + p1*a1*a2*a3^2*x + p3*a1*a2*a3^2*z + p1*a1*a2*x^3 - 2*p2*a1*a2*x^2*y + 3*p1*a1*a2*x*y^2 + p1*a1*a2*x*z^2 - 2*p3*a1*a3^3*y + p2*a1*a3^3*z - 2*p3*a1*a3*x^2*y + 2*p1*a1*a3*x*y*z + 2*p3*a2^2*x*y*z - 2*p1*a2^2*y*z^2 - p3*a2*a3*x^3 + 2*p1*a2*a3*x^2*z - 3*p3*a2*a3*x*y^2 - 2*p2*a2*a3*x*y*z - p3*a2*a3*x*z^2 + 6*p1*a2*a3*y^2*z + 2*p1*a2*a3*z^3 + p2*a3^2*x^3 - 2*p1*a3^2*x^2*y + 3*p2*a3^2*x*y^2 + p2*a3^2*x*z^2 - 4*p1*a3^2*y^3 - 2*p1*a3^2*y*z^2)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*y - 2*a1^3*a2*x + 2*a1^2*a2^2*y - 2*a1^2*a2*a3*z + 4*a1^2*a3^2*y + 2*a1^2*x^2*y + 4*a1^2*y^3 + 4*a1^2*y*z^2 - 2*a1*a2^3*x - 2*a1*a2*a3^2*x - 2*a1*a2*x^3 - 6*a1*a2*x*y^2 - 2*a1*a2*x*z^2 - 4*a1*a3*x*y*z - 2*a2^3*a3*z + 2*a2^2*a3^2*y + 2*a2^2*x^2*y + 2*a2^2*y*z^2 - 2*a2*a3^3*z - 2*a2*a3*x^2*z - 6*a2*a3*y^2*z - 2*a2*a3*z^3 + 2*a3^4*y + 4*a3^2*x^2*y + 4*a3^2*y^3 + 2*a3^2*y*z^2)*(- p2*a1^4*x*y - p3*a1^4*x*z + p1*a1^4*y^2 + p1*a1^4*z^2 + p2*a1^3*a2*x^2 - p1*a1^3*a2*x*y - p3*a1^3*a2*y*z + p2*a1^3*a2*z^2 + p3*a1^3*a3*x^2 - p1*a1^3*a3*x*z + p3*a1^3*a3*y^2 - p2*a1^3*a3*y*z - p2*a1^2*a2^2*x*y - p3*a1^2*a2^2*x*z + p1*a1^2*a2^2*y^2 + p1*a1^2*a2^2*z^2 - p2*a1^2*a3^2*x*y - p3*a1^2*a3^2*x*z + p1*a1^2*a3^2*y^2 + p1*a1^2*a3^2*z^2 - p2*a1^2*x^3*y - p3*a1^2*x^3*z + p1*a1^2*x^2*y^2 + p1*a1^2*x^2*z^2 - p2*a1^2*x*y^3 - p3*a1^2*x*y^2*z - p2*a1^2*x*y*z^2 - p3*a1^2*x*z^3 + p1*a1^2*y^4 + 2*p1*a1^2*y^2*z^2 + p1*a1^2*z^4 + p2*a1*a2^3*x^2 - p1*a1*a2^3*x*y - p3*a1*a2^3*y*z + p2*a1*a2^3*z^2 + p3*a1*a2^2*a3*x^2 - p1*a1*a2^2*a3*x*z + p3*a1*a2^2*a3*y^2 - p2*a1*a2^2*a3*y*z + p2*a1*a2*a3^2*x^2 - p1*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*y*z + p2*a1*a2*a3^2*z^2 + p2*a1*a2*x^4 - p1*a1*a2*x^3*y + p2*a1*a2*x^2*y^2 + p2*a1*a2*x^2*z^2 - p1*a1*a2*x*y^3 - p1*a1*a2*x*y*z^2 + p3*a1*a3^3*x^2 - p1*a1*a3^3*x*z + p3*a1*a3^3*y^2 - p2*a1*a3^3*y*z + p3*a1*a3*x^4 - p1*a1*a3*x^3*z + p3*a1*a3*x^2*y^2 + p3*a1*a3*x^2*z^2 - p1*a1*a3*x*y^2*z - p1*a1*a3*x*z^3 - p3*a2^2*x^3*z + p1*a2^2*x^2*z^2 - p3*a2^2*x*y^2*z - p3*a2^2*x*z^3 + p1*a2^2*y^2*z^2 + p1*a2^2*z^4 + p3*a2*a3*x^3*y + p2*a2*a3*x^3*z - 2*p1*a2*a3*x^2*y*z + p3*a2*a3*x*y^3 + p2*a2*a3*x*y^2*z + p3*a2*a3*x*y*z^2 + p2*a2*a3*x*z^3 - 2*p1*a2*a3*y^3*z - 2*p1*a2*a3*y*z^3 - p2*a3^2*x^3*y + p1*a3^2*x^2*y^2 - p2*a3^2*x*y^3 - p2*a3^2*x*y*z^2 + p1*a3^2*y^4 + p1*a3^2*y^2*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(1,3) = - (p3*a1^4*x - 2*p1*a1^4*z + p3*a1^3*a2*y - 2*p2*a1^3*a2*z + p1*a1^3*a3*x + p2*a1^3*a3*y + p3*a1^2*a2^2*x - 2*p1*a1^2*a2^2*z + p3*a1^2*a3^2*x - 2*p1*a1^2*a3^2*z + p3*a1^2*x^3 - 2*p1*a1^2*x^2*z + p3*a1^2*x*y^2 + 2*p2*a1^2*x*y*z + 3*p3*a1^2*x*z^2 - 4*p1*a1^2*y^2*z - 4*p1*a1^2*z^3 + p3*a1*a2^3*y - 2*p2*a1*a2^3*z + p1*a1*a2^2*a3*x + p2*a1*a2^2*a3*y + p3*a1*a2*a3^2*y - 2*p2*a1*a2*a3^2*z - 2*p2*a1*a2*x^2*z + 2*p1*a1*a2*x*y*z + p1*a1*a3^3*x + p2*a1*a3^3*y + p1*a1*a3*x^3 - 2*p3*a1*a3*x^2*z + p1*a1*a3*x*y^2 + 3*p1*a1*a3*x*z^2 + p3*a2^2*x^3 - 2*p1*a2^2*x^2*z + p3*a2^2*x*y^2 + 3*p3*a2^2*x*z^2 - 2*p1*a2^2*y^2*z - 4*p1*a2^2*z^3 - p2*a2*a3*x^3 + 2*p1*a2*a3*x^2*y - p2*a2*a3*x*y^2 - 2*p3*a2*a3*x*y*z - 3*p2*a2*a3*x*z^2 + 2*p1*a2*a3*y^3 + 6*p1*a2*a3*y*z^2 + 2*p2*a3^2*x*y*z - 2*p1*a3^2*y^2*z)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*z - 2*a1^3*a3*x + 4*a1^2*a2^2*z - 2*a1^2*a2*a3*y + 2*a1^2*a3^2*z + 2*a1^2*x^2*z + 4*a1^2*y^2*z + 4*a1^2*z^3 - 2*a1*a2^2*a3*x - 4*a1*a2*x*y*z - 2*a1*a3^3*x - 2*a1*a3*x^3 - 2*a1*a3*x*y^2 - 6*a1*a3*x*z^2 + 2*a2^4*z - 2*a2^3*a3*y + 2*a2^2*a3^2*z + 4*a2^2*x^2*z + 2*a2^2*y^2*z + 4*a2^2*z^3 - 2*a2*a3^3*y - 2*a2*a3*x^2*y - 2*a2*a3*y^3 - 6*a2*a3*y*z^2 + 2*a3^2*x^2*z + 2*a3^2*y^2*z)*(- p2*a1^4*x*y - p3*a1^4*x*z + p1*a1^4*y^2 + p1*a1^4*z^2 + p2*a1^3*a2*x^2 - p1*a1^3*a2*x*y - p3*a1^3*a2*y*z + p2*a1^3*a2*z^2 + p3*a1^3*a3*x^2 - p1*a1^3*a3*x*z + p3*a1^3*a3*y^2 - p2*a1^3*a3*y*z - p2*a1^2*a2^2*x*y - p3*a1^2*a2^2*x*z + p1*a1^2*a2^2*y^2 + p1*a1^2*a2^2*z^2 - p2*a1^2*a3^2*x*y - p3*a1^2*a3^2*x*z + p1*a1^2*a3^2*y^2 + p1*a1^2*a3^2*z^2 - p2*a1^2*x^3*y - p3*a1^2*x^3*z + p1*a1^2*x^2*y^2 + p1*a1^2*x^2*z^2 - p2*a1^2*x*y^3 - p3*a1^2*x*y^2*z - p2*a1^2*x*y*z^2 - p3*a1^2*x*z^3 + p1*a1^2*y^4 + 2*p1*a1^2*y^2*z^2 + p1*a1^2*z^4 + p2*a1*a2^3*x^2 - p1*a1*a2^3*x*y - p3*a1*a2^3*y*z + p2*a1*a2^3*z^2 + p3*a1*a2^2*a3*x^2 - p1*a1*a2^2*a3*x*z + p3*a1*a2^2*a3*y^2 - p2*a1*a2^2*a3*y*z + p2*a1*a2*a3^2*x^2 - p1*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*y*z + p2*a1*a2*a3^2*z^2 + p2*a1*a2*x^4 - p1*a1*a2*x^3*y + p2*a1*a2*x^2*y^2 + p2*a1*a2*x^2*z^2 - p1*a1*a2*x*y^3 - p1*a1*a2*x*y*z^2 + p3*a1*a3^3*x^2 - p1*a1*a3^3*x*z + p3*a1*a3^3*y^2 - p2*a1*a3^3*y*z + p3*a1*a3*x^4 - p1*a1*a3*x^3*z + p3*a1*a3*x^2*y^2 + p3*a1*a3*x^2*z^2 - p1*a1*a3*x*y^2*z - p1*a1*a3*x*z^3 - p3*a2^2*x^3*z + p1*a2^2*x^2*z^2 - p3*a2^2*x*y^2*z - p3*a2^2*x*z^3 + p1*a2^2*y^2*z^2 + p1*a2^2*z^4 + p3*a2*a3*x^3*y + p2*a2*a3*x^3*z - 2*p1*a2*a3*x^2*y*z + p3*a2*a3*x*y^3 + p2*a2*a3*x*y^2*z + p3*a2*a3*x*y*z^2 + p2*a2*a3*x*z^3 - 2*p1*a2*a3*y^3*z - 2*p1*a2*a3*y*z^3 - p2*a3^2*x^3*y + p1*a3^2*x^2*y^2 - p2*a3^2*x*y^3 - p2*a3^2*x*y*z^2 + p1*a3^2*y^4 + p1*a3^2*y^2*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(2,1) = - (p2*a1^3*a2*y + p3*a1^3*a2*z - 2*p2*a1^2*a2^2*x + p1*a1^2*a2^2*y - 2*p3*a1^2*a2*a3*x + p1*a1^2*a2*a3*z + 2*p3*a1^2*x*y*z - 2*p2*a1^2*x*z^2 + p2*a1*a2^3*y + p3*a1*a2^3*z + p2*a1*a2*a3^2*y + p3*a1*a2*a3^2*z + 3*p2*a1*a2*x^2*y - 2*p1*a1*a2*x*y^2 + p2*a1*a2*y^3 + p2*a1*a2*y*z^2 - 3*p3*a1*a3*x^2*y + 6*p2*a1*a3*x^2*z - 2*p1*a1*a3*x*y*z - p3*a1*a3*y^3 + 2*p2*a1*a3*y^2*z - p3*a1*a3*y*z^2 + 2*p2*a1*a3*z^3 - 2*p2*a2^4*x + p1*a2^4*y - 2*p3*a2^3*a3*x + p1*a2^3*a3*z - 2*p2*a2^2*a3^2*x + p1*a2^2*a3^2*y - 4*p2*a2^2*x^3 + 3*p1*a2^2*x^2*y - 2*p2*a2^2*x*y^2 + 2*p3*a2^2*x*y*z - 4*p2*a2^2*x*z^2 + p1*a2^2*y^3 + p1*a2^2*y*z^2 - 2*p3*a2*a3^3*x + p1*a2*a3^3*z - 2*p3*a2*a3*x*y^2 + 2*p2*a2*a3*x*y*z - 4*p2*a3^2*x^3 + 3*p1*a3^2*x^2*y - 2*p2*a3^2*x*y^2 - 2*p2*a3^2*x*z^2 + p1*a3^2*y^3 + p1*a3^2*y*z^2)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((- 2*a1^3*a2*y - 2*a1^3*a3*z + 2*a1^2*a2^2*x + 2*a1^2*a3^2*x + 2*a1^2*x*y^2 + 2*a1^2*x*z^2 - 2*a1*a2^3*y - 2*a1*a2^2*a3*z - 2*a1*a2*a3^2*y - 6*a1*a2*x^2*y - 2*a1*a2*y^3 - 2*a1*a2*y*z^2 - 2*a1*a3^3*z - 6*a1*a3*x^2*z - 2*a1*a3*y^2*z - 2*a1*a3*z^3 + 2*a2^4*x + 4*a2^2*a3^2*x + 4*a2^2*x^3 + 2*a2^2*x*y^2 + 4*a2^2*x*z^2 - 4*a2*a3*x*y*z + 2*a3^4*x + 4*a3^2*x^3 + 4*a3^2*x*y^2 + 2*a3^2*x*z^2)*(- p2*a1^3*a2*x*y - p3*a1^3*a2*x*z + p1*a1^3*a2*y^2 + p1*a1^3*a2*z^2 + p2*a1^2*a2^2*x^2 - p1*a1^2*a2^2*x*y - p3*a1^2*a2^2*y*z + p2*a1^2*a2^2*z^2 + p3*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*z + p3*a1^2*a2*a3*y^2 - p2*a1^2*a2*a3*y*z - p3*a1^2*x^2*y*z + p2*a1^2*x^2*z^2 - p3*a1^2*y^3*z + p2*a1^2*y^2*z^2 - p3*a1^2*y*z^3 + p2*a1^2*z^4 - p2*a1*a2^3*x*y - p3*a1*a2^3*x*z + p1*a1*a2^3*y^2 + p1*a1*a2^3*z^2 - p2*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*x*z + p1*a1*a2*a3^2*y^2 + p1*a1*a2*a3^2*z^2 - p2*a1*a2*x^3*y + p1*a1*a2*x^2*y^2 - p2*a1*a2*x*y^3 - p2*a1*a2*x*y*z^2 + p1*a1*a2*y^4 + p1*a1*a2*y^2*z^2 + p3*a1*a3*x^3*y - 2*p2*a1*a3*x^3*z + p1*a1*a3*x^2*y*z + p3*a1*a3*x*y^3 - 2*p2*a1*a3*x*y^2*z + p3*a1*a3*x*y*z^2 - 2*p2*a1*a3*x*z^3 + p1*a1*a3*y^3*z + p1*a1*a3*y*z^3 + p2*a2^4*x^2 - p1*a2^4*x*y - p3*a2^4*y*z + p2*a2^4*z^2 + p3*a2^3*a3*x^2 - p1*a2^3*a3*x*z + p3*a2^3*a3*y^2 - p2*a2^3*a3*y*z + p2*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*y - p3*a2^2*a3^2*y*z + p2*a2^2*a3^2*z^2 + p2*a2^2*x^4 - p1*a2^2*x^3*y + p2*a2^2*x^2*y^2 - p3*a2^2*x^2*y*z + 2*p2*a2^2*x^2*z^2 - p1*a2^2*x*y^3 - p1*a2^2*x*y*z^2 - p3*a2^2*y^3*z + p2*a2^2*y^2*z^2 - p3*a2^2*y*z^3 + p2*a2^2*z^4 + p3*a2*a3^3*x^2 - p1*a2*a3^3*x*z + p3*a2*a3^3*y^2 - p2*a2*a3^3*y*z + p3*a2*a3*x^2*y^2 - p2*a2*a3*x^2*y*z + p3*a2*a3*y^4 - p2*a2*a3*y^3*z + p3*a2*a3*y^2*z^2 - p2*a2*a3*y*z^3 + p2*a3^2*x^4 - p1*a3^2*x^3*y + p2*a3^2*x^2*y^2 + p2*a3^2*x^2*z^2 - p1*a3^2*x*y^3 - p1*a3^2*x*y*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(2,2) = - (p2*a1^3*a2*x - 2*p1*a1^3*a2*y + p1*a1^2*a2^2*x + p3*a1^2*a2^2*z - 2*p3*a1^2*a2*a3*y + p2*a1^2*a2*a3*z + p3*a1^2*x^2*z + 3*p3*a1^2*y^2*z - 2*p2*a1^2*y*z^2 + p3*a1^2*z^3 + p2*a1*a2^3*x - 2*p1*a1*a2^3*y + p2*a1*a2*a3^2*x - 2*p1*a1*a2*a3^2*y + p2*a1*a2*x^3 - 2*p1*a1*a2*x^2*y + 3*p2*a1*a2*x*y^2 + p2*a1*a2*x*z^2 - 4*p1*a1*a2*y^3 - 2*p1*a1*a2*y*z^2 - p3*a1*a3*x^3 - p1*a1*a3*x^2*z - 3*p3*a1*a3*x*y^2 + 4*p2*a1*a3*x*y*z - p3*a1*a3*x*z^2 - 3*p1*a1*a3*y^2*z - p1*a1*a3*z^3 + p1*a2^4*x + p3*a2^4*z - 2*p3*a2^3*a3*y + p2*a2^3*a3*z + p1*a2^2*a3^2*x + p3*a2^2*a3^2*z + p1*a2^2*x^3 - 2*p2*a2^2*x^2*y + p3*a2^2*x^2*z + 3*p1*a2^2*x*y^2 + p1*a2^2*x*z^2 + 3*p3*a2^2*y^2*z - 2*p2*a2^2*y*z^2 + p3*a2^2*z^3 - 2*p3*a2*a3^3*y + p2*a2*a3^3*z - 2*p3*a2*a3*x^2*y + p2*a2*a3*x^2*z - 4*p3*a2*a3*y^3 + 3*p2*a2*a3*y^2*z - 2*p3*a2*a3*y*z^2 + p2*a2*a3*z^3 + p1*a3^2*x^3 - 2*p2*a3^2*x^2*y + 3*p1*a3^2*x*y^2 + p1*a3^2*x*z^2)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*y - 2*a1^3*a2*x + 2*a1^2*a2^2*y - 2*a1^2*a2*a3*z + 4*a1^2*a3^2*y + 2*a1^2*x^2*y + 4*a1^2*y^3 + 4*a1^2*y*z^2 - 2*a1*a2^3*x - 2*a1*a2*a3^2*x - 2*a1*a2*x^3 - 6*a1*a2*x*y^2 - 2*a1*a2*x*z^2 - 4*a1*a3*x*y*z - 2*a2^3*a3*z + 2*a2^2*a3^2*y + 2*a2^2*x^2*y + 2*a2^2*y*z^2 - 2*a2*a3^3*z - 2*a2*a3*x^2*z - 6*a2*a3*y^2*z - 2*a2*a3*z^3 + 2*a3^4*y + 4*a3^2*x^2*y + 4*a3^2*y^3 + 2*a3^2*y*z^2)*(- p2*a1^3*a2*x*y - p3*a1^3*a2*x*z + p1*a1^3*a2*y^2 + p1*a1^3*a2*z^2 + p2*a1^2*a2^2*x^2 - p1*a1^2*a2^2*x*y - p3*a1^2*a2^2*y*z + p2*a1^2*a2^2*z^2 + p3*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*z + p3*a1^2*a2*a3*y^2 - p2*a1^2*a2*a3*y*z - p3*a1^2*x^2*y*z + p2*a1^2*x^2*z^2 - p3*a1^2*y^3*z + p2*a1^2*y^2*z^2 - p3*a1^2*y*z^3 + p2*a1^2*z^4 - p2*a1*a2^3*x*y - p3*a1*a2^3*x*z + p1*a1*a2^3*y^2 + p1*a1*a2^3*z^2 - p2*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*x*z + p1*a1*a2*a3^2*y^2 + p1*a1*a2*a3^2*z^2 - p2*a1*a2*x^3*y + p1*a1*a2*x^2*y^2 - p2*a1*a2*x*y^3 - p2*a1*a2*x*y*z^2 + p1*a1*a2*y^4 + p1*a1*a2*y^2*z^2 + p3*a1*a3*x^3*y - 2*p2*a1*a3*x^3*z + p1*a1*a3*x^2*y*z + p3*a1*a3*x*y^3 - 2*p2*a1*a3*x*y^2*z + p3*a1*a3*x*y*z^2 - 2*p2*a1*a3*x*z^3 + p1*a1*a3*y^3*z + p1*a1*a3*y*z^3 + p2*a2^4*x^2 - p1*a2^4*x*y - p3*a2^4*y*z + p2*a2^4*z^2 + p3*a2^3*a3*x^2 - p1*a2^3*a3*x*z + p3*a2^3*a3*y^2 - p2*a2^3*a3*y*z + p2*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*y - p3*a2^2*a3^2*y*z + p2*a2^2*a3^2*z^2 + p2*a2^2*x^4 - p1*a2^2*x^3*y + p2*a2^2*x^2*y^2 - p3*a2^2*x^2*y*z + 2*p2*a2^2*x^2*z^2 - p1*a2^2*x*y^3 - p1*a2^2*x*y*z^2 - p3*a2^2*y^3*z + p2*a2^2*y^2*z^2 - p3*a2^2*y*z^3 + p2*a2^2*z^4 + p3*a2*a3^3*x^2 - p1*a2*a3^3*x*z + p3*a2*a3^3*y^2 - p2*a2*a3^3*y*z + p3*a2*a3*x^2*y^2 - p2*a2*a3*x^2*y*z + p3*a2*a3*y^4 - p2*a2*a3*y^3*z + p3*a2*a3*y^2*z^2 - p2*a2*a3*y*z^3 + p2*a3^2*x^4 - p1*a3^2*x^3*y + p2*a3^2*x^2*y^2 + p2*a3^2*x^2*z^2 - p1*a3^2*x*y^3 - p1*a3^2*x*y*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(2,3) = - (p3*a1^3*a2*x - 2*p1*a1^3*a2*z + p3*a1^2*a2^2*y - 2*p2*a1^2*a2^2*z + p1*a1^2*a2*a3*x + p2*a1^2*a2*a3*y + p3*a1^2*x^2*y - 2*p2*a1^2*x^2*z + p3*a1^2*y^3 - 2*p2*a1^2*y^2*z + 3*p3*a1^2*y*z^2 - 4*p2*a1^2*z^3 + p3*a1*a2^3*x - 2*p1*a1*a2^3*z + p3*a1*a2*a3^2*x - 2*p1*a1*a2*a3^2*z + 2*p2*a1*a2*x*y*z - 2*p1*a1*a2*y^2*z + 2*p2*a1*a3*x^3 - p1*a1*a3*x^2*y + 2*p2*a1*a3*x*y^2 - 2*p3*a1*a3*x*y*z + 6*p2*a1*a3*x*z^2 - p1*a1*a3*y^3 - 3*p1*a1*a3*y*z^2 + p3*a2^4*y - 2*p2*a2^4*z + p1*a2^3*a3*x + p2*a2^3*a3*y + p3*a2^2*a3^2*y - 2*p2*a2^2*a3^2*z + p3*a2^2*x^2*y - 4*p2*a2^2*x^2*z + 2*p1*a2^2*x*y*z + p3*a2^2*y^3 - 2*p2*a2^2*y^2*z + 3*p3*a2^2*y*z^2 - 4*p2*a2^2*z^3 + p1*a2*a3^3*x + p2*a2*a3^3*y + p2*a2*a3*x^2*y + p2*a2*a3*y^3 - 2*p3*a2*a3*y^2*z + 3*p2*a2*a3*y*z^2 - 2*p2*a3^2*x^2*z + 2*p1*a3^2*x*y*z)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*z - 2*a1^3*a3*x + 4*a1^2*a2^2*z - 2*a1^2*a2*a3*y + 2*a1^2*a3^2*z + 2*a1^2*x^2*z + 4*a1^2*y^2*z + 4*a1^2*z^3 - 2*a1*a2^2*a3*x - 4*a1*a2*x*y*z - 2*a1*a3^3*x - 2*a1*a3*x^3 - 2*a1*a3*x*y^2 - 6*a1*a3*x*z^2 + 2*a2^4*z - 2*a2^3*a3*y + 2*a2^2*a3^2*z + 4*a2^2*x^2*z + 2*a2^2*y^2*z + 4*a2^2*z^3 - 2*a2*a3^3*y - 2*a2*a3*x^2*y - 2*a2*a3*y^3 - 6*a2*a3*y*z^2 + 2*a3^2*x^2*z + 2*a3^2*y^2*z)*(- p2*a1^3*a2*x*y - p3*a1^3*a2*x*z + p1*a1^3*a2*y^2 + p1*a1^3*a2*z^2 + p2*a1^2*a2^2*x^2 - p1*a1^2*a2^2*x*y - p3*a1^2*a2^2*y*z + p2*a1^2*a2^2*z^2 + p3*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*z + p3*a1^2*a2*a3*y^2 - p2*a1^2*a2*a3*y*z - p3*a1^2*x^2*y*z + p2*a1^2*x^2*z^2 - p3*a1^2*y^3*z + p2*a1^2*y^2*z^2 - p3*a1^2*y*z^3 + p2*a1^2*z^4 - p2*a1*a2^3*x*y - p3*a1*a2^3*x*z + p1*a1*a2^3*y^2 + p1*a1*a2^3*z^2 - p2*a1*a2*a3^2*x*y - p3*a1*a2*a3^2*x*z + p1*a1*a2*a3^2*y^2 + p1*a1*a2*a3^2*z^2 - p2*a1*a2*x^3*y + p1*a1*a2*x^2*y^2 - p2*a1*a2*x*y^3 - p2*a1*a2*x*y*z^2 + p1*a1*a2*y^4 + p1*a1*a2*y^2*z^2 + p3*a1*a3*x^3*y - 2*p2*a1*a3*x^3*z + p1*a1*a3*x^2*y*z + p3*a1*a3*x*y^3 - 2*p2*a1*a3*x*y^2*z + p3*a1*a3*x*y*z^2 - 2*p2*a1*a3*x*z^3 + p1*a1*a3*y^3*z + p1*a1*a3*y*z^3 + p2*a2^4*x^2 - p1*a2^4*x*y - p3*a2^4*y*z + p2*a2^4*z^2 + p3*a2^3*a3*x^2 - p1*a2^3*a3*x*z + p3*a2^3*a3*y^2 - p2*a2^3*a3*y*z + p2*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*y - p3*a2^2*a3^2*y*z + p2*a2^2*a3^2*z^2 + p2*a2^2*x^4 - p1*a2^2*x^3*y + p2*a2^2*x^2*y^2 - p3*a2^2*x^2*y*z + 2*p2*a2^2*x^2*z^2 - p1*a2^2*x*y^3 - p1*a2^2*x*y*z^2 - p3*a2^2*y^3*z + p2*a2^2*y^2*z^2 - p3*a2^2*y*z^3 + p2*a2^2*z^4 + p3*a2*a3^3*x^2 - p1*a2*a3^3*x*z + p3*a2*a3^3*y^2 - p2*a2*a3^3*y*z + p3*a2*a3*x^2*y^2 - p2*a2*a3*x^2*y*z + p3*a2*a3*y^4 - p2*a2*a3*y^3*z + p3*a2*a3*y^2*z^2 - p2*a2*a3*y*z^3 + p2*a3^2*x^4 - p1*a3^2*x^3*y + p2*a3^2*x^2*y^2 + p2*a3^2*x^2*z^2 - p1*a3^2*x*y^3 - p1*a3^2*x*y*z^2))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(3,1) = - (p2*a1^3*a3*y + p3*a1^3*a3*z - 2*p2*a1^2*a2*a3*x + p1*a1^2*a2*a3*y - 2*p3*a1^2*a3^2*x + p1*a1^2*a3^2*z - 2*p3*a1^2*x*y^2 + 2*p2*a1^2*x*y*z + p2*a1*a2^2*a3*y + p3*a1*a2^2*a3*z + 6*p3*a1*a2*x^2*y - 3*p2*a1*a2*x^2*z - 2*p1*a1*a2*x*y*z + 2*p3*a1*a2*y^3 - p2*a1*a2*y^2*z + 2*p3*a1*a2*y*z^2 - p2*a1*a2*z^3 + p2*a1*a3^3*y + p3*a1*a3^3*z + 3*p3*a1*a3*x^2*z - 2*p1*a1*a3*x*z^2 + p3*a1*a3*y^2*z + p3*a1*a3*z^3 - 2*p2*a2^3*a3*x + p1*a2^3*a3*y - 2*p3*a2^2*a3^2*x + p1*a2^2*a3^2*z - 4*p3*a2^2*x^3 + 3*p1*a2^2*x^2*z - 2*p3*a2^2*x*y^2 - 2*p3*a2^2*x*z^2 + p1*a2^2*y^2*z + p1*a2^2*z^3 - 2*p2*a2*a3^3*x + p1*a2*a3^3*y + 2*p3*a2*a3*x*y*z - 2*p2*a2*a3*x*z^2 - 2*p3*a3^4*x + p1*a3^4*z - 4*p3*a3^2*x^3 + 3*p1*a3^2*x^2*z - 4*p3*a3^2*x*y^2 + 2*p2*a3^2*x*y*z - 2*p3*a3^2*x*z^2 + p1*a3^2*y^2*z + p1*a3^2*z^3)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((- 2*a1^3*a2*y - 2*a1^3*a3*z + 2*a1^2*a2^2*x + 2*a1^2*a3^2*x + 2*a1^2*x*y^2 + 2*a1^2*x*z^2 - 2*a1*a2^3*y - 2*a1*a2^2*a3*z - 2*a1*a2*a3^2*y - 6*a1*a2*x^2*y - 2*a1*a2*y^3 - 2*a1*a2*y*z^2 - 2*a1*a3^3*z - 6*a1*a3*x^2*z - 2*a1*a3*y^2*z - 2*a1*a3*z^3 + 2*a2^4*x + 4*a2^2*a3^2*x + 4*a2^2*x^3 + 2*a2^2*x*y^2 + 4*a2^2*x*z^2 - 4*a2*a3*x*y*z + 2*a3^4*x + 4*a3^2*x^3 + 4*a3^2*x*y^2 + 2*a3^2*x*z^2)*(- p2*a1^3*a3*x*y - p3*a1^3*a3*x*z + p1*a1^3*a3*y^2 + p1*a1^3*a3*z^2 + p2*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*y - p3*a1^2*a2*a3*y*z + p2*a1^2*a2*a3*z^2 + p3*a1^2*a3^2*x^2 - p1*a1^2*a3^2*x*z + p3*a1^2*a3^2*y^2 - p2*a1^2*a3^2*y*z + p3*a1^2*x^2*y^2 - p2*a1^2*x^2*y*z + p3*a1^2*y^4 - p2*a1^2*y^3*z + p3*a1^2*y^2*z^2 - p2*a1^2*y*z^3 - p2*a1*a2^2*a3*x*y - p3*a1*a2^2*a3*x*z + p1*a1*a2^2*a3*y^2 + p1*a1*a2^2*a3*z^2 - 2*p3*a1*a2*x^3*y + p2*a1*a2*x^3*z + p1*a1*a2*x^2*y*z - 2*p3*a1*a2*x*y^3 + p2*a1*a2*x*y^2*z - 2*p3*a1*a2*x*y*z^2 + p2*a1*a2*x*z^3 + p1*a1*a2*y^3*z + p1*a1*a2*y*z^3 - p2*a1*a3^3*x*y - p3*a1*a3^3*x*z + p1*a1*a3^3*y^2 + p1*a1*a3^3*z^2 - p3*a1*a3*x^3*z + p1*a1*a3*x^2*z^2 - p3*a1*a3*x*y^2*z - p3*a1*a3*x*z^3 + p1*a1*a3*y^2*z^2 + p1*a1*a3*z^4 + p2*a2^3*a3*x^2 - p1*a2^3*a3*x*y - p3*a2^3*a3*y*z + p2*a2^3*a3*z^2 + p3*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*z + p3*a2^2*a3^2*y^2 - p2*a2^2*a3^2*y*z + p3*a2^2*x^4 - p1*a2^2*x^3*z + p3*a2^2*x^2*y^2 + p3*a2^2*x^2*z^2 - p1*a2^2*x*y^2*z - p1*a2^2*x*z^3 + p2*a2*a3^3*x^2 - p1*a2*a3^3*x*y - p3*a2*a3^3*y*z + p2*a2*a3^3*z^2 - p3*a2*a3*x^2*y*z + p2*a2*a3*x^2*z^2 - p3*a2*a3*y^3*z + p2*a2*a3*y^2*z^2 - p3*a2*a3*y*z^3 + p2*a2*a3*z^4 + p3*a3^4*x^2 - p1*a3^4*x*z + p3*a3^4*y^2 - p2*a3^4*y*z + p3*a3^2*x^4 - p1*a3^2*x^3*z + 2*p3*a3^2*x^2*y^2 - p2*a3^2*x^2*y*z + p3*a3^2*x^2*z^2 - p1*a3^2*x*y^2*z - p1*a3^2*x*z^3 + p3*a3^2*y^4 - p2*a3^2*y^3*z + p3*a3^2*y^2*z^2 - p2*a3^2*y*z^3))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(3,2) = - (p2*a1^3*a3*x - 2*p1*a1^3*a3*y + p1*a1^2*a2*a3*x + p3*a1^2*a2*a3*z - 2*p3*a1^2*a3^2*y + p2*a1^2*a3^2*z - 2*p3*a1^2*x^2*y + p2*a1^2*x^2*z - 4*p3*a1^2*y^3 + 3*p2*a1^2*y^2*z - 2*p3*a1^2*y*z^2 + p2*a1^2*z^3 + p2*a1*a2^2*a3*x - 2*p1*a1*a2^2*a3*y + 2*p3*a1*a2*x^3 - p1*a1*a2*x^2*z + 6*p3*a1*a2*x*y^2 - 2*p2*a1*a2*x*y*z + 2*p3*a1*a2*x*z^2 - 3*p1*a1*a2*y^2*z - p1*a1*a2*z^3 + p2*a1*a3^3*x - 2*p1*a1*a3^3*y + 2*p3*a1*a3*x*y*z - 2*p1*a1*a3*y*z^2 + p1*a2^3*a3*x + p3*a2^3*a3*z - 2*p3*a2^2*a3^2*y + p2*a2^2*a3^2*z - 2*p3*a2^2*x^2*y + 2*p1*a2^2*x*y*z + p1*a2*a3^3*x + p3*a2*a3^3*z + p3*a2*a3*x^2*z + 3*p3*a2*a3*y^2*z - 2*p2*a2*a3*y*z^2 + p3*a2*a3*z^3 - 2*p3*a3^4*y + p2*a3^4*z - 4*p3*a3^2*x^2*y + p2*a3^2*x^2*z + 2*p1*a3^2*x*y*z - 4*p3*a3^2*y^3 + 3*p2*a3^2*y^2*z - 2*p3*a3^2*y*z^2 + p2*a3^2*z^3)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*y - 2*a1^3*a2*x + 2*a1^2*a2^2*y - 2*a1^2*a2*a3*z + 4*a1^2*a3^2*y + 2*a1^2*x^2*y + 4*a1^2*y^3 + 4*a1^2*y*z^2 - 2*a1*a2^3*x - 2*a1*a2*a3^2*x - 2*a1*a2*x^3 - 6*a1*a2*x*y^2 - 2*a1*a2*x*z^2 - 4*a1*a3*x*y*z - 2*a2^3*a3*z + 2*a2^2*a3^2*y + 2*a2^2*x^2*y + 2*a2^2*y*z^2 - 2*a2*a3^3*z - 2*a2*a3*x^2*z - 6*a2*a3*y^2*z - 2*a2*a3*z^3 + 2*a3^4*y + 4*a3^2*x^2*y + 4*a3^2*y^3 + 2*a3^2*y*z^2)*(- p2*a1^3*a3*x*y - p3*a1^3*a3*x*z + p1*a1^3*a3*y^2 + p1*a1^3*a3*z^2 + p2*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*y - p3*a1^2*a2*a3*y*z + p2*a1^2*a2*a3*z^2 + p3*a1^2*a3^2*x^2 - p1*a1^2*a3^2*x*z + p3*a1^2*a3^2*y^2 - p2*a1^2*a3^2*y*z + p3*a1^2*x^2*y^2 - p2*a1^2*x^2*y*z + p3*a1^2*y^4 - p2*a1^2*y^3*z + p3*a1^2*y^2*z^2 - p2*a1^2*y*z^3 - p2*a1*a2^2*a3*x*y - p3*a1*a2^2*a3*x*z + p1*a1*a2^2*a3*y^2 + p1*a1*a2^2*a3*z^2 - 2*p3*a1*a2*x^3*y + p2*a1*a2*x^3*z + p1*a1*a2*x^2*y*z - 2*p3*a1*a2*x*y^3 + p2*a1*a2*x*y^2*z - 2*p3*a1*a2*x*y*z^2 + p2*a1*a2*x*z^3 + p1*a1*a2*y^3*z + p1*a1*a2*y*z^3 - p2*a1*a3^3*x*y - p3*a1*a3^3*x*z + p1*a1*a3^3*y^2 + p1*a1*a3^3*z^2 - p3*a1*a3*x^3*z + p1*a1*a3*x^2*z^2 - p3*a1*a3*x*y^2*z - p3*a1*a3*x*z^3 + p1*a1*a3*y^2*z^2 + p1*a1*a3*z^4 + p2*a2^3*a3*x^2 - p1*a2^3*a3*x*y - p3*a2^3*a3*y*z + p2*a2^3*a3*z^2 + p3*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*z + p3*a2^2*a3^2*y^2 - p2*a2^2*a3^2*y*z + p3*a2^2*x^4 - p1*a2^2*x^3*z + p3*a2^2*x^2*y^2 + p3*a2^2*x^2*z^2 - p1*a2^2*x*y^2*z - p1*a2^2*x*z^3 + p2*a2*a3^3*x^2 - p1*a2*a3^3*x*y - p3*a2*a3^3*y*z + p2*a2*a3^3*z^2 - p3*a2*a3*x^2*y*z + p2*a2*a3*x^2*z^2 - p3*a2*a3*y^3*z + p2*a2*a3*y^2*z^2 - p3*a2*a3*y*z^3 + p2*a2*a3*z^4 + p3*a3^4*x^2 - p1*a3^4*x*z + p3*a3^4*y^2 - p2*a3^4*y*z + p3*a3^2*x^4 - p1*a3^2*x^3*z + 2*p3*a3^2*x^2*y^2 - p2*a3^2*x^2*y*z + p3*a3^2*x^2*z^2 - p1*a3^2*x*y^2*z - p1*a3^2*x*z^3 + p3*a3^2*y^4 - p2*a3^2*y^3*z + p3*a3^2*y^2*z^2 - p2*a3^2*y*z^3))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;
d_xyz_d_lineDir(3,3) = - (p3*a1^3*a3*x - 2*p1*a1^3*a3*z + p3*a1^2*a2*a3*y - 2*p2*a1^2*a2*a3*z + p1*a1^2*a3^2*x + p2*a1^2*a3^2*y + p2*a1^2*x^2*y + p2*a1^2*y^3 - 2*p3*a1^2*y^2*z + 3*p2*a1^2*y*z^2 + p3*a1*a2^2*a3*x - 2*p1*a1*a2^2*a3*z - p2*a1*a2*x^3 - p1*a1*a2*x^2*y - p2*a1*a2*x*y^2 + 4*p3*a1*a2*x*y*z - 3*p2*a1*a2*x*z^2 - p1*a1*a2*y^3 - 3*p1*a1*a2*y*z^2 + p3*a1*a3^3*x - 2*p1*a1*a3^3*z + p3*a1*a3*x^3 - 2*p1*a1*a3*x^2*z + p3*a1*a3*x*y^2 + 3*p3*a1*a3*x*z^2 - 2*p1*a1*a3*y^2*z - 4*p1*a1*a3*z^3 + p3*a2^3*a3*y - 2*p2*a2^3*a3*z + p1*a2^2*a3^2*x + p2*a2^2*a3^2*y + p1*a2^2*x^3 - 2*p3*a2^2*x^2*z + p1*a2^2*x*y^2 + 3*p1*a2^2*x*z^2 + p3*a2*a3^3*y - 2*p2*a2*a3^3*z + p3*a2*a3*x^2*y - 2*p2*a2*a3*x^2*z + p3*a2*a3*y^3 - 2*p2*a2*a3*y^2*z + 3*p3*a2*a3*y*z^2 - 4*p2*a2*a3*z^3 + p1*a3^4*x + p2*a3^4*y + p1*a3^2*x^3 + p2*a3^2*x^2*y - 2*p3*a3^2*x^2*z + p1*a3^2*x*y^2 + 3*p1*a3^2*x*z^2 + p2*a3^2*y^3 - 2*p3*a3^2*y^2*z + 3*p2*a3^2*y*z^2)/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2) - ((2*a1^4*z - 2*a1^3*a3*x + 4*a1^2*a2^2*z - 2*a1^2*a2*a3*y + 2*a1^2*a3^2*z + 2*a1^2*x^2*z + 4*a1^2*y^2*z + 4*a1^2*z^3 - 2*a1*a2^2*a3*x - 4*a1*a2*x*y*z - 2*a1*a3^3*x - 2*a1*a3*x^3 - 2*a1*a3*x*y^2 - 6*a1*a3*x*z^2 + 2*a2^4*z - 2*a2^3*a3*y + 2*a2^2*a3^2*z + 4*a2^2*x^2*z + 2*a2^2*y^2*z + 4*a2^2*z^3 - 2*a2*a3^3*y - 2*a2*a3*x^2*y - 2*a2*a3*y^3 - 6*a2*a3*y*z^2 + 2*a3^2*x^2*z + 2*a3^2*y^2*z)*(- p2*a1^3*a3*x*y - p3*a1^3*a3*x*z + p1*a1^3*a3*y^2 + p1*a1^3*a3*z^2 + p2*a1^2*a2*a3*x^2 - p1*a1^2*a2*a3*x*y - p3*a1^2*a2*a3*y*z + p2*a1^2*a2*a3*z^2 + p3*a1^2*a3^2*x^2 - p1*a1^2*a3^2*x*z + p3*a1^2*a3^2*y^2 - p2*a1^2*a3^2*y*z + p3*a1^2*x^2*y^2 - p2*a1^2*x^2*y*z + p3*a1^2*y^4 - p2*a1^2*y^3*z + p3*a1^2*y^2*z^2 - p2*a1^2*y*z^3 - p2*a1*a2^2*a3*x*y - p3*a1*a2^2*a3*x*z + p1*a1*a2^2*a3*y^2 + p1*a1*a2^2*a3*z^2 - 2*p3*a1*a2*x^3*y + p2*a1*a2*x^3*z + p1*a1*a2*x^2*y*z - 2*p3*a1*a2*x*y^3 + p2*a1*a2*x*y^2*z - 2*p3*a1*a2*x*y*z^2 + p2*a1*a2*x*z^3 + p1*a1*a2*y^3*z + p1*a1*a2*y*z^3 - p2*a1*a3^3*x*y - p3*a1*a3^3*x*z + p1*a1*a3^3*y^2 + p1*a1*a3^3*z^2 - p3*a1*a3*x^3*z + p1*a1*a3*x^2*z^2 - p3*a1*a3*x*y^2*z - p3*a1*a3*x*z^3 + p1*a1*a3*y^2*z^2 + p1*a1*a3*z^4 + p2*a2^3*a3*x^2 - p1*a2^3*a3*x*y - p3*a2^3*a3*y*z + p2*a2^3*a3*z^2 + p3*a2^2*a3^2*x^2 - p1*a2^2*a3^2*x*z + p3*a2^2*a3^2*y^2 - p2*a2^2*a3^2*y*z + p3*a2^2*x^4 - p1*a2^2*x^3*z + p3*a2^2*x^2*y^2 + p3*a2^2*x^2*z^2 - p1*a2^2*x*y^2*z - p1*a2^2*x*z^3 + p2*a2*a3^3*x^2 - p1*a2*a3^3*x*y - p3*a2*a3^3*y*z + p2*a2*a3^3*z^2 - p3*a2*a3*x^2*y*z + p2*a2*a3*x^2*z^2 - p3*a2*a3*y^3*z + p2*a2*a3*y^2*z^2 - p3*a2*a3*y*z^3 + p2*a2*a3*z^4 + p3*a3^4*x^2 - p1*a3^4*x*z + p3*a3^4*y^2 - p2*a3^4*y*z + p3*a3^2*x^4 - p1*a3^2*x^3*z + 2*p3*a3^2*x^2*y^2 - p2*a3^2*x^2*y*z + p3*a3^2*x^2*z^2 - p1*a3^2*x*y^2*z - p1*a3^2*x*z^3 + p3*a3^2*y^4 - p2*a3^2*y^3*z + p3*a3^2*y^2*z^2 - p2*a3^2*y*z^3))/(a1^4*y^2 + a1^4*z^2 - 2*a1^3*a2*x*y - 2*a1^3*a3*x*z + a1^2*a2^2*x^2 + a1^2*a2^2*y^2 + 2*a1^2*a2^2*z^2 - 2*a1^2*a2*a3*y*z + a1^2*a3^2*x^2 + 2*a1^2*a3^2*y^2 + a1^2*a3^2*z^2 + a1^2*x^2*y^2 + a1^2*x^2*z^2 + a1^2*y^4 + 2*a1^2*y^2*z^2 + a1^2*z^4 - 2*a1*a2^3*x*y - 2*a1*a2^2*a3*x*z - 2*a1*a2*a3^2*x*y - 2*a1*a2*x^3*y - 2*a1*a2*x*y^3 - 2*a1*a2*x*y*z^2 - 2*a1*a3^3*x*z - 2*a1*a3*x^3*z - 2*a1*a3*x*y^2*z - 2*a1*a3*x*z^3 + a2^4*x^2 + a2^4*z^2 - 2*a2^3*a3*y*z + 2*a2^2*a3^2*x^2 + a2^2*a3^2*y^2 + a2^2*a3^2*z^2 + a2^2*x^4 + a2^2*x^2*y^2 + 2*a2^2*x^2*z^2 + a2^2*y^2*z^2 + a2^2*z^4 - 2*a2*a3^3*y*z - 2*a2*a3*x^2*y*z - 2*a2*a3*y^3*z - 2*a2*a3*y*z^3 + a3^4*x^2 + a3^4*y^2 + a3^2*x^4 + 2*a3^2*x^2*y^2 + a3^2*x^2*z^2 + a3^2*y^4 + a3^2*y^2*z^2)^2;

d_xyz_d_p1 = inv((SkewSymMat(dir) * SkewSymMat(dir) + SkewSymMat(dir_x) * SkewSymMat(dir_x))) * (SkewSymMat(dir)* SkewSymMat(dir));

d_lineDir_d_ptDiff = compute_d_bearing_d_pt_jac(p22 - p11);
d_ptDiff_d_p11 = -eye(3);
d_ptDiff_d_p22 = eye(3);

d_xyz_d_p11 = d_xyz_d_lineDir * d_lineDir_d_ptDiff * d_ptDiff_d_p11 + d_xyz_d_p1;
d_xyz_d_p22 = d_xyz_d_lineDir * d_lineDir_d_ptDiff * d_ptDiff_d_p22;

if 0
    d_rou1_d_p11 = compute_d_rou_d_xyz(p11);
    d_rou2_d_p22 = compute_d_rou_d_xyz(p22);
end

d_p11_d_rou1 = compute_d_xyz_d_rou(dir1, rou1);
d_p22_d_rou2 = compute_d_xyz_d_rou(dir2, rou2);

d_xyz_d_rou1 = d_xyz_d_p11 * d_p11_d_rou1;
d_xyz_d_rou2 = d_xyz_d_p22 * d_p22_d_rou2;


d_roux_d_xyz = compute_d_rou_d_xyz(px);

d_roux_d_rou1 = d_roux_d_xyz * d_xyz_d_rou1;
d_roux_d_rou2 = d_roux_d_xyz * d_xyz_d_rou2;

d_roux_d_rou12 = [d_roux_d_rou1 d_roux_d_rou2];

end
function d_bearing_d_pt = compute_d_bearing_d_pt_jac(pt)

d_bearing_d_pt = (norm(pt).*eye(3) - pt * pt'./norm(pt))./(norm(pt)^2);

if 0
    
    ptNorm = norm(pt);
    ptNorm_3_2 = -0.5 * (1 / (ptNorm * ptNorm * ptNorm));
    d_err_d_pt3d = zeros(3,3);
    d_err_d_pt3d(0+1, 0+1) = 1.0 / ptNorm + pt(0+1) * (ptNorm_3_2 * 2 * pt(0+1));
    d_err_d_pt3d(0+1, 1+1) = pt(0+1) * (ptNorm_3_2 * 2 * pt(1+1));
    d_err_d_pt3d(0+1, 2+1) = pt(0+1) * (ptNorm_3_2 * 2 * pt(2+1));
    
    d_err_d_pt3d(1+1, 0+1) = pt(1+1) * (ptNorm_3_2 * 2 * pt(0+1));
    d_err_d_pt3d(1+1, 1+1) = 1.0 / ptNorm + pt(1+1) * (ptNorm_3_2 * 2 * pt(1+1));
    d_err_d_pt3d(1+1, 2+1) = pt(1+1) * (ptNorm_3_2 * 2 * pt(2+1));
    
    d_err_d_pt3d(2+1, 0+1) = pt(2+1) * (ptNorm_3_2 * 2 * pt(0+1));
    d_err_d_pt3d(2+1, 1+1) = pt(2+1) * (ptNorm_3_2 * 2 * pt(1+1));
    d_err_d_pt3d(2+1, 2+1) = 1.0 / ptNorm + pt(2+1) * (ptNorm_3_2 * 2 * pt(2+1));
end

end
function d_rou_d_xyz = compute_d_rou_d_xyz(xyz)
d_rou_d_xyz = -0.5 * norm(xyz)^-3 * 2 * [xyz'];
end
function d_xyz_d_rou = compute_d_xyz_d_rou(dir, rou)

d_xyz_d_rou = -dir / rou / rou;
end